// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenRA.MasterServer;

#nullable disable

namespace OpenRA.MasterServer.Migrations
{
    [DbContext(typeof(MasterServerContext))]
    [Migration("20230523211514_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("OpenRA.MasterServer.Legacy.Server", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Authentication")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisabledSpawnPoints")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Map")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mod")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModIcon32")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModWebsite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Protected")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProtocolVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Started")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Address");

                    b.ToTable("Servers", (string)null);
                });

            modelBuilder.Entity("OpenRA.MasterServer.Legacy.Server", b =>
                {
                    b.OwnsMany("OpenRA.MasterServer.Legacy.GameClient", "Clients", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Color")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Faction")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Fingerprint")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsAdmin")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsBot")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsSpectator")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.Property<int>("SpawnPoint")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Team")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("Address");

                            b1.ToTable("Clients", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("Address");
                        });

                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
